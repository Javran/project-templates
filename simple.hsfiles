{-# START_FILE package.yaml #-}
name: {{name}}
version: 0.1.0.0
github: {{github-username}}{{^github-username}}githubuser{{/github-username}}/{{name}}
license: BSD3
author: {{author-name}}{{^author-name}}Author name here{{/author-name}}
maintainer: {{author-email}}{{^author-email}}example@example.com{{/author-email}}
description: description

dependencies:
- base

library:
  source-dirs: src
  ghc-options:
    - -Wall
    - -O2

executables:
  demo:
    main: Main.hs
    source-dirs: exe
    dependencies:
      - {{name}}
    ghc-options:
      - -Wall
      - -O2
      - -threaded
      - -rtsopts
      - -with-rtsopts=-N

tests:
  hspec:
    main: Spec.hs
    source-dirs:
      - test
    dependencies:
      - {{name}}
      - QuickCheck
      - hspec
    ghc-options:
      - -Wall
      - -O2
      - -threaded
      - -rtsopts
      - -with-rtsopts=-N
      - -main-is Spec

{-# START_FILE src/Lib.hs #-}
module Lib
  ( main
  ) where

main :: IO ()
main = pure ()

{-# START_FILE exe/Main.hs #-}
module Main
  ( main
  ) where

import Lib (main)

{-# START_FILE test/Spec.hs #-}
{-# OPTIONS_GHC -F -pgmF hspec-discover -optF --module-name=Spec #-}

{-# START_FILE test/DemoSpec.hs #-}

module DemoSpec where

import Test.Hspec

spec :: Spec
spec =
  describe "demo" $
    specify "trivial" $
      () `shouldBe` ()

{-# START_FILE .gitignore #-}
.stack-work/
stack.yaml.lock
*~

private/
z*

{-# START_FILE .gitattributes #-}
*.cabal linguist-generated=true -diff

{-# START_FILE stack.yaml #-}
resolver: lts-18.28
packages:
- .

{-# START_FILE .hlint.yaml #-}
- ignore: {name: Avoid lambda}
- ignore: {name: Avoid lambda using `infix`}
- ignore: {name: Eta reduce}
- ignore: {name: Reduce duplication}
- ignore: {name: Redundant pure}
- ignore: {name: Use camelCase}
- ignore: {name: Use const}
- ignore: {name: Use head}
- ignore: {name: Use if}
- ignore: {name: Use infix}
- ignore: {name: Use list literal pattern}
- ignore: {name: Use newtype instead of data}
- ignore: {name: Use uncurry}

{-# START_FILE hie.yaml #-}
cradle:
  stack:
    - path: "./src"
      component: "{{name}}:lib"
    - path: "./exe"
      component: "{{name}}:exe:demo"
    - path: "./test"
      component: "{{name}}:test:hspec"

{-# START_FILE z #-}
#!/bin/bash

stack build && stack exec -- demo "$@"